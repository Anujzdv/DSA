#include <bits/stdc++.h>
using namespace std;

struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

TreeNode* buildTree(vector<int>& arr, int& idx) {
    if (idx >= arr.size() || arr[idx] == -1) {
        idx++;
        return nullptr;
    }
    TreeNode* root = new TreeNode(arr[idx++]);
    root->left = buildTree(arr, idx);
    root->right = buildTree(arr, idx);
    return root;
}

void postorder(TreeNode* root, vector<int>& result) {
    if (!root) return;
    postorder(root->left, result);
    postorder(root->right, result);
    result.push_back(root->val);
}

vector<int> postorderTraversal(TreeNode* root) {
    vector<int> result;
    postorder(root, result);
    return result;
}

int main() {
    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) cin >> arr[i];
    int idx = 0;
    TreeNode* root = buildTree(arr, idx);
    vector<int> ans = postorderTraversal(root);
    for (int x : ans) cout << x << " ";
    return 0;
}
